apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

//./gradlew sonarqube
sonarqube {
    properties {
        property "sonar.projectName", "Java :: Utility Project :: Email Utility"
        property "sonar.projectKey", "$project.group:$project.name"
        property "sonar.language", "java"
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.junit.reportsPath", "${project.buildDir}/test-results"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

buildscript {
	repositories { 
		mavenCentral()
		maven {
        	url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies { 
      classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
      classpath 'org.sonarqube.gradle:gradle-sonarqube-plugin:1.0'
	}
}

version = ''

repositories {
	mavenLocal()
    mavenCentral()
}

// For provided jars
configurations {
	provided
}

ext {
	springVersion = '4.3.24.RELEASE'
	logbackVersion = '1.1.3'
	pagingVersion = '0.2'
}

dependencies {
	compile 'org.slf4j:slf4j-api:1.7.12'
	runtime 'org.slf4j:jcl-over-slf4j:1.7.12'
	compile 'ch.qos.logback:logback-core:' + logbackVersion
	compile 'ch.qos.logback:logback-classic:' + logbackVersion

	compile files('libs/abilists_bean-0.7.7.jar', 'libs/abilists_core-0.7.7.jar', 'libs/abilists_plugins-0.1.0.jar', 'libs/base_bean-0.2.2.jar', 'libs/base_core-0.2.2.jar')
	compile "org.freemarker:freemarker:2.3.23"
	compile "io.paging:paging:" + pagingVersion
	compile "org.apache.commons:commons-pool2:2.5.0"
	compile "org.apache.commons:commons-dbcp2:2.3.0"
	compile "org.apache.commons:commons-collections4:4.1"
	compile "commons-beanutils:commons-beanutils:1.8.3"
	compile "commons-configuration:commons-configuration:1.9"
	compile 'commons-lang:commons-lang:2.6'
	compile "commons-codec:commons-codec:1.4"
	compile ('org.springmodules:spring-modules-jakarta-commons:0.8') {
		exclude group: 'commons-chain', module: 'commons-chain'
	}
	compile "io.utility:security:0.0.1"
	compile "io.utility:letter:0.0.4"

	compile 'javax.validation:validation-api:1.1.0.Final'

	compile "org.mybatis:mybatis:3.2.8"
	compile "org.mybatis:mybatis-spring:1.2.5"
	compile 'org.springframework:spring-jdbc:' + springVersion
	compile 'org.springframework:spring-webmvc:' + springVersion
	compile 'org.springframework:spring-context:' + springVersion
	compile "org.apache.tomcat:tomcat-servlet-api:8.5.5"
	compile 'com.h2database:h2:1.4.200'

	provided "org.apache.tomcat:tomcat-servlet-api:8.5.42"

	testCompile 'org.springframework:spring-test:' + springVersion
	testCompile 'javax.servlet:javax.servlet-api:4.0.1'
	testCompile "junit:junit:4.+"
}

jar {
    manifest {
        attributes (
        	'Specification-Title': 'plugin_time_record.jar',
        	'Specification-Version': '0.1.0',
        	'Specification-Vendor': 'Softfran Tech, Inc.',
        	'Built-By': System.properties['user.name'],
        	'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
        	'Created-By': "Gradle ${gradle.gradleVersion}",
        	'Build-Jdk': "${System.properties['java.version']}",
        	'Implementation-Title': 'plugin_time_record', 
        	'Implementation-Version': version, 
        	'Class-Path': configurations.runtime.files.collect { 'libs/' + it.name }.join(' ')
        )
    }

	exclude ("applicationContext.xml")
	exclude ("logback.xml")
	exclude ("**.properties")
	exclude ("com/abilists/plugins/interceptor*")
}

// $ gradle install
configure(install.repositories.mavenInstaller) {
    pom.project {
		group = 'com.abilists.plugins'
		artifactId 'plugin_time_record'
        inceptionYear '2020'
        packaging 'jar'
        licenses {
            license {
                name 'Eclipse Public License (Version 1.0)'
                url 'http://www.eclipse.org/legal/epl-v10.html'
                distribution 'repo'
            }
        }
    }
}

// $ gradle -b ./probuild.gradle buildJar
// $ gradle buildJar
task buildJar << {
	copy {
		from "build/libs/plugin_time_record.jar"
		into "${System.getProperty( 'user.dir' )}" + "/../abilists_plugins/plugins"
//		rename { String fileName -> fileName.replace("plugin_survey-" + version + ".jar", "plugin_survey-" + version + ".sfn")}
		include '**/*.jar'
	}
}

buildJar.dependsOn(install)

// $ gradle wrapper
task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}